"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Joi = void 0;
const joi_1 = __importDefault(require("joi"));
exports.Joi = joi_1.default;
function isKeyOnContext(key) {
    return key === 'params';
}
const validator = (schema, options = {}) => async (ctx, next) => {
    const validateOptions = {
        ...options,
        context: {
            ...ctx,
            ...options.context,
        },
    };
    const keys = Object.keys(schema);
    const promises = keys.map(async (key) => {
        const targetSchema = schema[key];
        if (!targetSchema)
            return;
        let source;
        let value;
        if (isKeyOnContext(key)) {
            source = ctx;
            value = ctx[key];
        }
        else {
            source = ctx.request;
            value = ctx.request[key];
        }
        const validatedValue = await targetSchema.validateAsync(value, validateOptions);
        Object.defineProperty(source, key, {
            get() {
                return validatedValue;
            },
        });
    });
    await Promise.all(promises);
    return next();
};
exports.default = validator;
